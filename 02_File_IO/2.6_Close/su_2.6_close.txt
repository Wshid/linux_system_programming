#include<unistd.h>

int close(int fd); // 파일 작업 종료시 꼭 닫아주어야 함

fd에 연관된 파일과의 맵핑 해제 및 ps로부터 파일 떼어냄

호출 성공시, 0 실패시 -1 및 errno 설정

if(close(fd)==-1)
    perror("close");
    
파일을 닫더라도 강제로 파일을 쓰지는 않음
SynchronizedIO에서 이용했던 방법중에 하나를 사용해야 함

파일 닫을때 몇가지 부작용
    마지막으로 열린 fd가 닫히면 커널 내부에서 파일 표현하는 자료구조 해제
    메모리에서 그 파일과 연관된 inode 복사본 제거
    (inode를 참조하는 객체가 없으면 제거 가능)
    파일이 디스크에서 연결 종료시 열려있는 상태였다면, inode 복사본이 제거될때까지 제거되지 않음
    
    close()호출 시, 파일 닫는 작업 이외에 연결이 끊어진 파일을
        디스크에서 물리적으로 완전히 제거하는 부작용 발생 가능성 존재

===
2.6.1 에러 값

close()의 반환값을 꼭 환인하도록 할 것

EBADF // fd가 유효하지 않음
EIO // 저수준의 입출력 에러

EINTR // close에서는 존재하지 않음
