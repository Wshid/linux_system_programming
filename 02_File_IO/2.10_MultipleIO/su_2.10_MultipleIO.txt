stdin이나 IPC(여러 프로세스간 통신)
처리시, 하나 이상의 fd을 block할 필요가 있다.

Event-Driven GUI app.의 경우 main loop에서 수백개의 이벤트와 전쟁

단일 프로세스는 thread없이는 하나 이상의 fd를 block 불가능

read()호출 후 아무런 데이터가 없다면 ps는 블록되며 다른 fd 처리도 불가능
fd에서 어떤 데이터를 읽어올수 없다면 ps는 영원히 block
    Network app.에서 socket여러개 있을때, fd가 제대로 준비되지 못한다면 심각한 문제 발생

이 문제를 해결하기 위해.. non-block 사용?
    // block되는 대신에 errno 반환
    하지만,
        1. ps는 열린 fd가 하나의 입출력 준비할때까지 기다리면서 어떤 임의의 순서대로 입출력 요청을 해야함
        2. ps를 sleep후 다른 작업 처리 후, fd가 입출력 준비가 되면 awake하는것이 더 효율적

다중 입출력
    여러개의 fd를 동시에 블록, 하나라도 준비가 되면 알려주는 기능

    1, fd중 하나의 입출력이 가능할때 알려준다.
    2. 준비된 fd가 없다면 하나 이상의 fd가 준비될때까지 sleep
    3. wake, 어떤 fd가 살았는지
    4. block하지 않고 모든 fd가 IO를 준비하도록 함
    5. 다시 1.로 돌아감
    
리눅스의 경우 select, poll, epoll 인터페이스 세가지 다중 입출력 방식 지원
