
    지정한 위치 읽고 쓰기 가능
    읽기, 쓰기 작업 이후 파일 오프셋을 갱신하지 않음
    
    #define _XOPEN_SOURCE 500
    
    #include<unistd.h>
    
    ssize_t pread(int fd, void *buf, size_t count, off_t pos);
        fd+pos를 buf에 count 바이트 만큼 읽어들인다.

    ssize_t pwrite(int fd, const void *buf, size_t count, off_t pos);
        buf에 담긴 데이터를 fd+pos에 count만큼 쓴다.
        
    read, write, pread, pwrite를 혼용시, 파일이 망가질 수 있음
    
    오프셋 지정 read, write는 호출이 가능한 fd에서만 사용 가능
    
    lseek()과의 차이점
        1. pread()와 pwrite()는 작업 후 파일 오프셋을 원위치로 돌려야 할때 사용
        2. 호출 후 파일 포인터 갱신 x
        3. Race Condition 회피 가능
            스레드 상황에서 offset이 저장된 FT를 공유하기 때문에 lseek후 파일 쓰려고 할때
            타 스레드에 의해 변경될 수 있음
            lseek은 본질적으로 여러 스레드에서 같은 fd를 처리할 경우 안전하지 x
    

===
2.8.1 에러값

호출 성공시 읽거나 쓴 바이트 수 반환

pread(), ret = 0 // EOF
pwrite(), ret = 0 // 아무런 데이터를 쓰지 못함

에러 발생시 -1 반환
    pread()의 경우
            read()와 lseek()에서 허용하는 errno
    pwirte()의 경우
            write()와 lseek()에서 허용하는 errno
